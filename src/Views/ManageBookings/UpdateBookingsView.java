/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.ManageBookings;

import Services.Converters;
import Services.ExceptionMessageDialog;
import Services.ManageOperations.ManageBookings;
import Services.ManageOperations.ManageHalls;
import Views.ManageHalls.SearchHallsView;
import Views.ManageHalls.SelectHallTableView;
import com.github.lgooddatepicker.optionalusertools.DateChangeListener;
import com.github.lgooddatepicker.zinternaltools.DateChangeEvent;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import javafx.util.converter.LocalDateStringConverter;
import javax.swing.JOptionPane;

/**
 *
 * @author janith
 */
public class UpdateBookingsView extends javax.swing.JPanel {

    /**
     * Creates new form UpdateBookingsView
     */
    public UpdateBookingsView() {
        initComponents();
    }

    public UpdateBookingsView(int bookingID) throws SQLException{
        this();
        this.bookingID = bookingID;
        ResultSet bookingResults = mb.read("bookingid = "+this.bookingID);
        while(bookingResults.next()){
            this.hallId = Integer.parseInt(bookingResults.getString("hallid"));
            ResultSet hallResults = mh.read("hallid = "+bookingResults.getString("hallid"));
            String hallid = "";
            String hallString = "";
            bookedByTxt.setText(bookingResults.getString("bookedby"));
            Date startDate = bookingResults.getDate("startdate");
            Date endDate = bookingResults.getDate("enddate");
            startDatePicker.setDate(Converters.fromDatetoLocalDate(startDate));
            endDatePicker.setDate(Converters.fromDatetoLocalDate(endDate));
            startDateSelectedChk.setSelected(false);
            endDateSelectedChk.setSelected(false);
            setBitConf(bookingResults.getString("dayconfig"));
            //startDatePicker.setDate(Conver);
            while(hallResults.next()){
                hallid = hallResults.getString("hallid");
                hallString = "Name: " + hallResults.getString("name");
                hallString += " Capacity: " + hallResults.getString("capacity");
                hallString += " Price: " + hallResults.getString("price");
            }
            hallSearchResultLabel.setText(hallString);
            
        }
    }
    private ManageHalls mh = new ManageHalls();
    private ManageBookings mb = new ManageBookings();
    private int bookingID = -1;
    private int hallId = -1;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TuesdayChk = new javax.swing.JCheckBox();
        WednesdayChk = new javax.swing.JCheckBox();
        FridayChk = new javax.swing.JCheckBox();
        SaturdayChk = new javax.swing.JCheckBox();
        SundayChk = new javax.swing.JCheckBox();
        ThursdayChk = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        confirmedChk = new javax.swing.JCheckBox();
        searchHalls = new javax.swing.JButton();
        hallSearchResultLabel = new javax.swing.JLabel();
        startDatePicker = new com.github.lgooddatepicker.components.DatePicker();
        endDatePicker = new com.github.lgooddatepicker.components.DatePicker();
        jLabel7 = new javax.swing.JLabel();
        bookedByTxt = new javax.swing.JTextField();
        hallSelectedChk = new javax.swing.JCheckBox();
        bookedBySelectedChk = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        startDateSelectedChk = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        endDateSelectedChk = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        dowSelectedChk = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jCheckBox6 = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        allDayChk = new javax.swing.JCheckBox();
        MondayChk = new javax.swing.JCheckBox();

        TuesdayChk.setText("Tuesday");
        TuesdayChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TuesdayChkDayOfWeekChkActionPerformed(evt);
            }
        });

        WednesdayChk.setText("Wednesday");
        WednesdayChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WednesdayChkDayOfWeekChkActionPerformed(evt);
            }
        });

        FridayChk.setText("Friday");
        FridayChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FridayChkDayOfWeekChkActionPerformed(evt);
            }
        });

        SaturdayChk.setText("Saturday");
        SaturdayChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaturdayChkDayOfWeekChkActionPerformed(evt);
            }
        });

        SundayChk.setText("Sunday");
        SundayChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SundayChkDayOfWeekChkActionPerformed(evt);
            }
        });

        ThursdayChk.setText("Thursday");
        ThursdayChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThursdayChkDayOfWeekChkActionPerformed(evt);
            }
        });

        jLabel6.setText("Confirmed");

        confirmedChk.setText("Confirm");
        confirmedChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmedChkActionPerformed(evt);
            }
        });

        searchHalls.setText("Search Halls");
        searchHalls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchHallsActionPerformed(evt);
            }
        });

        hallSearchResultLabel.setText(" ");

        startDatePicker.setText("Pick Start Date");
        startDatePicker.addDateChangeListener(new DateChangeListenerChk("START"));

        endDatePicker.setText("Pick End Date");
        endDatePicker.addDateChangeListener(new DateChangeListenerChk("END"));

        jLabel7.setText("Booked By");

        bookedByTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bookedByTxtKeyReleased(evt);
            }
        });

        hallSelectedChk.setEnabled(false);

        bookedBySelectedChk.setEnabled(false);

        jLabel1.setText("Search Halls");

        startDateSelectedChk.setEnabled(false);

        jLabel2.setText("Currently Selected");

        endDateSelectedChk.setEnabled(false);

        jLabel3.setText("Start Date");

        dowSelectedChk.setEnabled(false);

        jLabel4.setText("End Date");

        jCheckBox6.setEnabled(false);

        jLabel5.setText("Day of week");

        allDayChk.setText("All day");
        allDayChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allDayChkActionPerformed(evt);
            }
        });

        MondayChk.setText("Monday");
        MondayChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MondayChkDayOfWeekChkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox6)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(confirmedChk)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(hallSelectedChk)
                            .addComponent(bookedBySelectedChk)
                            .addComponent(startDateSelectedChk)
                            .addComponent(endDateSelectedChk)
                            .addComponent(dowSelectedChk))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7))
                                .addGap(86, 86, 86)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(endDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(startDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bookedByTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(162, 162, 162))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(hallSearchResultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(187, 187, 187))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(searchHalls)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(WednesdayChk)
                                                            .addComponent(MondayChk, javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(TuesdayChk, javax.swing.GroupLayout.Alignment.LEADING))
                                                        .addGap(18, 18, 18)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(FridayChk)
                                                            .addComponent(ThursdayChk)
                                                            .addComponent(SaturdayChk)))
                                                    .addComponent(allDayChk))
                                                .addGap(18, 18, 18)
                                                .addComponent(SundayChk)))
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(searchHalls)
                    .addComponent(hallSelectedChk))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(hallSearchResultLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(bookedByTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bookedBySelectedChk))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(startDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(startDateSelectedChk))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(endDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(endDateSelectedChk))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(dowSelectedChk))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MondayChk)
                            .addComponent(ThursdayChk)
                            .addComponent(SundayChk))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FridayChk, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TuesdayChk))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(WednesdayChk)
                            .addComponent(SaturdayChk))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(allDayChk)
                        .addGap(12, 12, 12)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(confirmedChk))
                    .addComponent(jCheckBox6))
                .addGap(109, 109, 109))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TuesdayChkDayOfWeekChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TuesdayChkDayOfWeekChkActionPerformed
        // TODO add your handling code here:
        setCheckBoxes();
    }//GEN-LAST:event_TuesdayChkDayOfWeekChkActionPerformed

    private void WednesdayChkDayOfWeekChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WednesdayChkDayOfWeekChkActionPerformed
        // TODO add your handling code here:
        setCheckBoxes();
    }//GEN-LAST:event_WednesdayChkDayOfWeekChkActionPerformed

    private void FridayChkDayOfWeekChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FridayChkDayOfWeekChkActionPerformed
        // TODO add your handling code here:
        setCheckBoxes();
    }//GEN-LAST:event_FridayChkDayOfWeekChkActionPerformed

    private void SaturdayChkDayOfWeekChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaturdayChkDayOfWeekChkActionPerformed
        // TODO add your handling code here:
        setCheckBoxes();
    }//GEN-LAST:event_SaturdayChkDayOfWeekChkActionPerformed

    private void SundayChkDayOfWeekChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SundayChkDayOfWeekChkActionPerformed
        // TODO add your handling code here:
        setCheckBoxes();
    }//GEN-LAST:event_SundayChkDayOfWeekChkActionPerformed

    private void ThursdayChkDayOfWeekChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThursdayChkDayOfWeekChkActionPerformed
        // TODO add your handling code here:
        setCheckBoxes();
    }//GEN-LAST:event_ThursdayChkDayOfWeekChkActionPerformed

    private void confirmedChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmedChkActionPerformed
        // TODO add your handling code here:
        confirmedChk.setSelected(true);
    }//GEN-LAST:event_confirmedChkActionPerformed

    public void updateBookings(){
        Object[] bookingValueList = new String[mb.columnNames.length];
        
        bookingValueList[0] = this.hallId+"";
        bookingValueList[1] = this.bookedByTxt.getText();
        bookingValueList[2] = this.startDatePicker.getDateStringOrEmptyString();
        bookingValueList[3] = this.endDatePicker.getDateStringOrEmptyString();
        bookingValueList[4] = getBitConf();
        bookingValueList[5] = this.confirmedChk.isSelected() ? "1":"0";
        mb.update(bookingValueList, mb.columnNames, "bookingid = "+bookingID);
    }
    private String getBitConf() {
        if(allDayChk.isSelected()){
            return "1111111";
        }
        String conf = MondayChk.isSelected() ? "1":"0";
        conf += TuesdayChk.isSelected() ? "1":"0";
        conf += WednesdayChk.isSelected() ? "1":"0";
        conf += ThursdayChk.isSelected() ? "1":"0";
        conf += FridayChk.isSelected() ? "1":"0";
        conf += SaturdayChk.isSelected() ? "1":"0";
        conf += SundayChk.isSelected() ? "1":"0";
        System.out.println("Bit configuration"+conf);
        return conf;
    }
    private void searchHallsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchHallsActionPerformed
        // TODO add your handling code here:
        //search for halls
        try {
            SearchHallsView shv = new SearchHallsView();
            int firstResult = JOptionPane.showConfirmDialog(this, shv, "Search halls", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
            if (firstResult == JOptionPane.OK_OPTION) {
                ResultSet searchResultSet = shv.searchHalls();
                SelectHallTableView shtv = new SelectHallTableView(searchResultSet);
                int secondResult = JOptionPane.showConfirmDialog(this, shtv, "Select Halls", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
                if (secondResult == JOptionPane.OK_OPTION && shtv.getSelectedHall() != -1) {

                    int hallid = shtv.getSelectedHall();
                    this.hallId = hallid;
                    ResultSet hallResult = mh.read("hallid = " + hallid);
                    String hallString = "";
                    while (hallResult.next()) {
                        hallString = "Name: " + hallResult.getString("name");
                        hallString += " Capacity: " + hallResult.getString("capacity");
                        hallString += " Price: " + hallResult.getString("price");
                    }
                    hallSearchResultLabel.setText(hallString);
                    hallSelectedChk.setSelected(true);
                }else{
                    JOptionPane.showMessageDialog(this, "No Hall Selected");
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            ExceptionMessageDialog.show(this, ex.getLocalizedMessage());
        }
    }//GEN-LAST:event_searchHallsActionPerformed

    private void bookedByTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bookedByTxtKeyReleased
        // TODO add your handling code here:
        bookedBySelectedChk.setSelected(!bookedByTxt.getText().equals(""));
    }//GEN-LAST:event_bookedByTxtKeyReleased

    private void MondayChkDayOfWeekChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MondayChkDayOfWeekChkActionPerformed
        // TODO add your handling code here:
        setCheckBoxes();
    }//GEN-LAST:event_MondayChkDayOfWeekChkActionPerformed

    private void allDayChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allDayChkActionPerformed
        // TODO add your handling code here:
        setCheckBoxes();
    }//GEN-LAST:event_allDayChkActionPerformed

    public void setCheckBoxes(){
        dowSelectedChk.setSelected(
            MondayChk.isSelected() || TuesdayChk.isSelected() || WednesdayChk.isSelected() ||
            ThursdayChk.isSelected() || FridayChk.isSelected() || SaturdayChk.isSelected() ||
            SundayChk.isSelected() || allDayChk.isSelected()
        );
    }
    private void setBitConf(String s) {
        if(s.equals("1111111")){
            allDayChk.setSelected(true);
            
        }else{
        for (int i = 0; i < s.length(); i++) {
            switch(i){
                case 0:
                    MondayChk.setSelected((s.charAt(i) == '1'));
                    break;
                case 1:
                    TuesdayChk.setSelected((s.charAt(i) == '1'));
                    break;
                case 2:
                    WednesdayChk.setSelected((s.charAt(i) == '1'));
                    break;
                case 3:
                    ThursdayChk.setSelected((s.charAt(i) == '1'));
                    break;
                case 4:
                    FridayChk.setSelected((s.charAt(i) == '1'));
                    break;
                case 5:
                    SaturdayChk.setSelected((s.charAt(i) == '1'));
                    break;
                case 6:
                    SundayChk.setSelected((s.charAt(i) == '1'));
                    break;
            }
        }
        }
    }

    private class DateChangeListenerChk implements DateChangeListener {

        private String tag;
        public DateChangeListenerChk(String tag) {
            this.tag = tag;
        }

        @Override
        public void dateChanged(DateChangeEvent dce) {
            if(this.tag.equals("START")){
                if(dce.getNewDate().toString().equals("")){
                    UpdateBookingsView.this.startDateSelectedChk.setSelected(false);
                }else{
                    UpdateBookingsView.this.startDateSelectedChk.setSelected(true);
                }
            }else if(this.tag.equals("END")){
                if(dce.getNewDate().toString().equals("")){
                    UpdateBookingsView.this.endDateSelectedChk.setSelected(false);
                }else{
                    UpdateBookingsView.this.endDateSelectedChk.setSelected(false);
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox FridayChk;
    private javax.swing.JCheckBox MondayChk;
    private javax.swing.JCheckBox SaturdayChk;
    private javax.swing.JCheckBox SundayChk;
    private javax.swing.JCheckBox ThursdayChk;
    private javax.swing.JCheckBox TuesdayChk;
    private javax.swing.JCheckBox WednesdayChk;
    private javax.swing.JCheckBox allDayChk;
    private javax.swing.JCheckBox bookedBySelectedChk;
    private javax.swing.JTextField bookedByTxt;
    private javax.swing.JCheckBox confirmedChk;
    private javax.swing.JCheckBox dowSelectedChk;
    private com.github.lgooddatepicker.components.DatePicker endDatePicker;
    private javax.swing.JCheckBox endDateSelectedChk;
    private javax.swing.JLabel hallSearchResultLabel;
    private javax.swing.JCheckBox hallSelectedChk;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton searchHalls;
    private com.github.lgooddatepicker.components.DatePicker startDatePicker;
    private javax.swing.JCheckBox startDateSelectedChk;
    // End of variables declaration//GEN-END:variables
}
