/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.ManageHalls;

import Services.ExceptionMessageDialog;
import Services.ManageOperations.ManageFacilities;
import Services.ManageOperations.ManageHalls;
import Services.ManageOperations.ManageHallsHasFacilities;
import Services.TableModelBuilder;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author janith
 */
public class UpdateHallsView extends javax.swing.JPanel {

    /**
     * Creates new form UpdateHallsView
     */
    private ManageHalls mh  = new ManageHalls();
    private ManageHallsHasFacilities mhf = new ManageHallsHasFacilities();
    private ManageFacilities mf = new ManageFacilities();
    public UpdateHallsView() {
        initComponents();
    }
    
    public UpdateHallsView(int hallid) throws SQLException{
        this();
        ResultSet initResults = mh.read("hallid = "+hallid);
        while(initResults.next()){
            hallNameTxt.setText(initResults.getString("hallid"));
            capacitySpnr.setValue(initResults.getObject("capacity"));
            priceSpnr.setValue(initResults.getObject("price"));
            DefaultTableModel baseModel = (DefaultTableModel) TableModelBuilder.build(mf.read("ALL"));  
            Map<String,String> facilityCountMap = new HashMap<String,String>();
            ResultSet facilityCountResult = mhf.read("hallid = "+hallid);
            while(facilityCountResult.next()){
                facilityCountMap.put(facilityCountResult.getString("facilityid"), facilityCountResult.getString("count"));
            }
            Vector v = new Vector();
            for (int i = 0; i < baseModel.getRowCount(); i++) {
                String val = "0";
                for(String key: facilityCountMap.keySet()){
                    System.out.println(key+"-"+baseModel.getValueAt(i, 0).toString());
                    if(baseModel.getValueAt(i, 0).toString().equals(key)){
                        val = facilityCountMap.get(key);
                        break;
                    }
                }
                v.add(val);
            }
            baseModel.addColumn("Count", v);
            facilitesTable.setModel(baseModel);
            jCheckBox1.setSelected(false);
            jCheckBox2.setSelected(false);
            jCheckBox3.setSelected(false);
            jCheckBox4.setSelected(false);
        }
    }
    private TableModel getFacilitiesTableModel() {
        try {
            ManageFacilities mf = new ManageFacilities();
            DefaultTableModel baseModel = (DefaultTableModel) TableModelBuilder.build(mf.read("ALL"));
            Vector v = new Vector();
            for (int i = 0; i < baseModel.getRowCount(); i++) {
                v.add(0);
            }
            baseModel.addColumn("Count", v);
            return baseModel;
        } catch (SQLException ex) {
            ex.printStackTrace();
            ExceptionMessageDialog.show(this, ex.getLocalizedMessage());
            return null;
        }

    }
    public void updateHalls(){
        String criteria = "";
        if(jCheckBox1.isSelected()){
            //hallname changed
        }
        if(jCheckBox2.isSelected()){
            //capacity changed
        }
        if(jCheckBox3.isSelected()){
            //price changed
        }
        if(jCheckBox4.isSelected()){
            //facilities edited
            //if zero count then delete thats all
            //if it is not there in the database then 0 rows affected
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        facilitesTable = new javax.swing.JTable();
        jCheckBox4 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        hallNameTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        capacitySpnr = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        priceSpnr = new javax.swing.JSpinner();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        jCheckBox3.setEnabled(false);

        jCheckBox2.setEnabled(false);

        facilitesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                facilitesTableMouseClicked(evt);
            }
        });
        facilitesTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                facilitesTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(facilitesTable);

        jCheckBox4.setEnabled(false);

        jLabel2.setText("Hall Name");

        hallNameTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                hallNameTxtKeyReleased(evt);
            }
        });

        jLabel3.setText("Capacity");

        capacitySpnr.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        capacitySpnr.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                capacitySpnrStateChanged(evt);
            }
        });
        capacitySpnr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                capacitySpnrKeyReleased(evt);
            }
        });

        jLabel4.setText("Price");

        priceSpnr.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), Double.valueOf(0.0d), null, Double.valueOf(1.0d)));
        priceSpnr.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                priceSpnrStateChanged(evt);
            }
        });
        priceSpnr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                priceSpnrKeyReleased(evt);
            }
        });

        jCheckBox1.setEnabled(false);

        jLabel1.setText("Update Halls");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox4))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(hallNameTxt)
                            .addComponent(capacitySpnr)
                            .addComponent(priceSpnr, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(hallNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(capacitySpnr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(priceSpnr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addGap(23, 23, 23)
                        .addComponent(jCheckBox2)
                        .addGap(30, 30, 30)
                        .addComponent(jCheckBox3)
                        .addGap(47, 47, 47)
                        .addComponent(jCheckBox4)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void facilitesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_facilitesTableMouseClicked
        // TODO add your handling code here:
        for (int i = 0; i < facilitesTable.getRowCount(); i++) {
            if (!facilitesTable.getValueAt(i, 2).toString().equals("0")) {
                jCheckBox4.setSelected(true);
                break;
            } else {
                jCheckBox4.setSelected(false);
            }
        }
    }//GEN-LAST:event_facilitesTableMouseClicked

    private void facilitesTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_facilitesTableKeyReleased
        // TODO add your handling code here:
        jCheckBox4.setSelected(true);
    }//GEN-LAST:event_facilitesTableKeyReleased

    private void hallNameTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hallNameTxtKeyReleased
        // TODO add your handling code here:
        if (hallNameTxt.getText().equals("")) {
            jCheckBox1.setSelected(false);
        } else {
            jCheckBox1.setSelected(true);
        }
    }//GEN-LAST:event_hallNameTxtKeyReleased

    private void capacitySpnrStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_capacitySpnrStateChanged
        // TODO add your handling code here:
        if (capacitySpnr.getValue().toString().equals("0")) {
            jCheckBox2.setSelected(false);
        } else {
            jCheckBox2.setSelected(true);
        }
    }//GEN-LAST:event_capacitySpnrStateChanged

    private void capacitySpnrKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_capacitySpnrKeyReleased
        // TODO add your handling code here:
        if (capacitySpnr.getValue().toString().equals("0")) {
            jCheckBox2.setSelected(false);
        } else {
            jCheckBox2.setSelected(true);
        }
    }//GEN-LAST:event_capacitySpnrKeyReleased

    private void priceSpnrStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_priceSpnrStateChanged
        // TODO add your handling code here:
        if (priceSpnr.getValue().toString().equals("0")) {
            jCheckBox3.setSelected(false);
        } else {
            jCheckBox3.setSelected(true);
        }
    }//GEN-LAST:event_priceSpnrStateChanged

    private void priceSpnrKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceSpnrKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_priceSpnrKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner capacitySpnr;
    private javax.swing.JTable facilitesTable;
    private javax.swing.JTextField hallNameTxt;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner priceSpnr;
    // End of variables declaration//GEN-END:variables
}
